@model esercizioS17L1.Models.Pagamento

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="form-group">
        @if (ViewBag.Dipendenti != null && ViewBag.Dipendenti.Any())
        {
            @Html.LabelFor(model => model.DipendenteID, "Dipendente", new { @class = "control-label" })
            @Html.DropDownListFor(model => model.DipendenteID, ViewBag.Dipendenti as SelectList, "Seleziona dipendente", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DipendenteID)
        }
        else
        {
            <p>Nessun dipendente disponibile.</p>
        }
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Periodo)
        @Html.EditorFor(model => model.Periodo, new { htmlAttributes = new { @class = "form-control datepicker" } })
        @Html.ValidationMessageFor(model => model.Periodo)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ammontare)
        @Html.TextBoxFor(model => model.Ammontare, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Ammontare)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipologiaPagamento, "Tipologia di pagamento", new { @class = "control-label" })
        <div class="radio">
            <label>
                @Html.RadioButtonFor(model => model.TipologiaPagamento, "Stipendio") Stipendio
            </label>
        </div>
        <div class="radio">
            <label>
                @Html.RadioButtonFor(model => model.TipologiaPagamento, "Acconto") Acconto
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.TipologiaPagamento)
    </div>

    <div class="form-group">
        <input type="submit" value="Crea Pagamento" class="btn btn-primary" />
    </div>
}
